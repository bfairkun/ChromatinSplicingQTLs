configfile: "config/config.yaml"
configfile: "config/config.local.yaml"

include: "rules/common.py"
include: "rules/DownloadAndPreprocess.smk"
include: "rules/Alignment.smk"
include: "rules/MakeBigwigs.smk"
# include: "rules/CutAndTagChecks.smk"
include: "rules/QC.smk"
include: "rules/ExpressionAnalysis.smk"
include: "rules/featureCounts.smk"
include: "rules/PeakCalling.smk"
include: "rules/SplicingAnalysis.smk"
include: "rules/ChromatinPehnotypesAnalysis.smk"
include: "rules/ProSeqAnalysis.smk"
include: "rules/QTLTools.smk"
include: "rules/Coloc.smk"
include: "rules/report.smk"
include: "rules/BensJupyterNotebookRules.smk"
include: "rules/NonCodingRNA.smk"
include: "rules/GWAS_PrepForColoc.smk"
include: "rules/IntronSlopes.smk"
include: "rules/IntronRetention.smk"
include: "rules/ProcessTehranchi.smk"
include: "rules/PlotQTLs.smk"
include: "rules/CalculateExonicPSI.smk"
include: "rules/SpliceSiteMutation.smk"
#include: "rules/DeNovoNonCodingRNA.smk"
#include: "rules/AnnotationNonCodingRNA.smk"
include: "rules/DeNovoNonCodingRNA_plots.smk"
include: "rules/QTL_SNP_Enrichment.smk"
include: "rules/APA_DataPrep.smk"
include: "rules/CalculatePi1.smk"
include: "rules/CreateUnstandardizedPhenotypeMatrices.smk"
include: "rules/Metaplots.smk"
include: "rules/CarlosDevelop.smk"


wildcard_constraints:
    chrom="|".join(autosomes),
    IndID="|".join(Fastq_samples["IndID"]),
    Rep="\d+",
    QTLsGenotypeSet="|".join(["", "HarmonizedSNPs"]),
    FeatureCoordinatesRedefinedFor="|".join(["", "ForColoc", "ForGWASColoc"]),
    Pass="|".join(["PermutationPass", "NominalPass", "GroupedPermutationPass"]),
    StandardizedOrUnstandardized="|Unstandardized",
    QTLTools_chunk_n = "|".join([str(i) for i in ChunkNumbers])


localrules:
    all,
    CollectNormalizedPsiTables,
    CollectColocResultsToOutputDir,
    CollectDownloadGWAS_SummaryStats,
    Collect_chRNASeq_Fastq,
    CollectColocResultsToCodeDir,
    CopyFastqFromLocal,
    DownloadFastqFromLink,
    Download1KG_GRCh38,
    STAR_make_index,
    DownloadHg38Ref,
    DownloadFastqFromLink_SE,
    DownloadGWAS_SummaryStats,
    InstallHyprcoloc,
    Download_hg19_to_hg38_chain,
    DownloadHg38Gencode_basic,
    DownloadKristjansdottirSupplementData2,
    DownloadChromHMM,


ruleorder: CopyFastqFromLocal > DownloadFastqFromLink


rule all:
    input:
        expand(
            "featureCounts/AtTSS/{Phenotype}/Counts.txt",
            Phenotype=["H3K27AC", "H3K4ME3", "H3K4ME1", "ProCap"],
        ),

        expand("QTLs/QTLTools/{Phenotype}/PermutationPass.FDR_Added.txt.gz", Phenotype=MyPhenotypes),
        expand("QTLs/QTLTools/{Phenotype}/PermutationPassForColoc.txt.gz", Phenotype=MyPhenotypes),
        expand("hyprcoloc/Results/ForColoc/{ColocName}/tidy_results_OnlyColocalized.txt.gz", ColocName = colocs_genewise.index),
        expand("QTLs/QTLTools/{Phenotype}/{Pass}{QTLsGenotypeSet}{FeatureCoordinatesRedefinedFor}.txt.tabix.gz", Pass="NominalPass", QTLsGenotypeSet="", FeatureCoordinatesRedefinedFor="ForColoc", Phenotype=MyPhenotypes),
        # expand("hyprcoloc/Results/ForGWASColoc/{ColocName}/results.txt.gz", ColocName = colocs_gwas.index )
        "NonCodingRNA_annotation/annotation/ncRNA.bed.gz",
        'NonCodingRNA_annotation/annotation/ncRNA.histone.tab.gz',
        'NonCodingRNA_annotation/annotation/allGenes.histone.tab.gz',
        'QTLs/QTLTools/chRNA.Slopes/OnlyFirstReps.Slopes.bed.gz',
        'QTLs/QTLTools/chRNA.Slopes/OnlyFirstReps.Intercept.bed.gz',
        expand(
            "QTLs/QTLTools/{Phenotype}.{Prime}/NominalPass.txt.gz",
            Phenotype = ['chRNA.Splicing', 'polyA.Splicing', 'H3K4ME1', 'H3K4ME3', 'H3K27AC', 'H3K36ME3'],
            Prime = ['5PrimeSS', '3PrimeSS']
        ),
        "QTLs/QTLTools/polyA.Splicing.5PrimeSS.Subset_YRI/NominalPass.txt.gz",
        "QTLs/QTLTools/polyA.Splicing.3PrimeSS.Subset_YRI/NominalPass.txt.gz",
        expand("scratch/PairwisePi1Traits.P.{chunk}.txt.gz", chunk=range(1, NumPvalsForPi1Chunks+1))

rule Collect_chRNASeq_Fastq:
    """
    Useful to force rexecution of all chRNAseq related analysis after
    identifying sample swaps and correcting them in samples.tsv config
    """
    input:
        ####expand(
        ####    "Fastq/{Phenotype}/{IndID}/{Rep}.R1.fastq.gz",
        ####    zip,
        ####    Phenotype=chRNASeqSamples_df["Phenotype"],
        ####    IndID=chRNASeqSamples_df["IndID"],
        ####    Rep=chRNASeqSamples_df["RepNumber"],
        ####),


rule CollectColocResultsToCodeDir:
    """
    invoke this as the target rule to perform colocalizations as defined in config/ColocRunWildcards.tsv without altering any git tracked files in ../output dir
    """
    input:
        expand("hyprcoloc/Results/ForColoc/{ColocName}/tidy_results_OnlyColocalized.txt.gz", ColocName = colocs_genewise.index),
        #expand("hyprcoloc/Results/ForGWASColoc/{ColocName}/results.txt.gz", ColocName = colocs_gwas.index )

rule CollectColocResultsToOutputDir:
    """
    invoke this as the target rule to perform colocalizations as defined in config/ColocRunWildcards.tsv and move them to the ../output dir which is git tracked
    """
    input:
        expand("../output/hyprcoloc_results/ForColoc/{ColocName}/hyprcoloc.results.OnlyColocalized.Stats.txt.gz", ColocName = colocs_genewise.index),
        expand("../output/hyprcoloc_results/ForGWASColoc/{ColocName}/hyprcoloc.results.txt.gz", ColocName = colocs_gwas.index )

rule CollectDownloadGWAS_SummaryStats:
    input:
        expand("gwas_summary_stats/full_data/{accession}.tsv.gz", accession=gwas_df.index)

