configfile: "config/config.yaml"


include: "rules/common.py"
include: "rules/DownloadAndPreprocess.smk"
include: "rules/Alignment.smk"
include: "rules/MakeBigwigs.smk"
# include: "rules/CutAndTagChecks.smk"
include: "rules/QC.smk"
include: "rules/ExpressionAnalysis.smk"
include: "rules/featureCounts.smk"
include: "rules/PeakCalling.smk"
include: "rules/SplicingAnalysis.smk"
include: "rules/ChromatinPehnotypesAnalysis.smk"
include: "rules/ProSeqAnalysis.smk"
include: "rules/QTLTools.smk"
include: "rules/Coloc.smk"
include: "rules/report.smk"
include: "rules/BensJupyterNotebookRules.smk"
include: "rules/GetNonCodingRNA.smk"
include: "rules/GWAS_PrepForColoc.smk"
include: "rules/chRNASeqSlopes.smk"


wildcard_constraints:
    chrom="|".join(autosomes),
    IndID="|".join(Fastq_samples["IndID"]),
    Rep="\d+",
    QTLsGenotypeSet="|".join(["", "HarmonizedSNPs"]),
    FeatureCoordinatesRedefinedFor="|".join(["", "ForColoc", "ForGWASColoc"]),
    Pass="|".join(["PermutationPass", "NominalPass"]),


localrules:
    all,
    CopyFastqFromLocal,
    DownloadFastqFromLink,
    Download1KG_GRCh38,
    STAR_make_index,
    DownloadHg38Ref,
    DownloadFastqFromLink_SE,
    DownloadGWAS_SummaryStats,
    InstallHyprcoloc,
    Download_hg19_to_hg38_chain,
    DownloadHg38Gencode_basic,
    DownloadKristjansdottirSupplementData2,


ruleorder: CopyFastqFromLocal > DownloadFastqFromLink


rule all:
    input:
        # expand("logs/PlotGruberQTLs/PlotFromShellScript.{pheno}.log", pheno=["H3K4ME3", "H3K27AC", "H3K4ME1"]),
        expand(
            "QC/mbv/plots/{Phenotype}/{IndID}.{Rep}.pdf",
            zip,
            Phenotype=chRNASeqSamples_df["Phenotype"],
            IndID=chRNASeqSamples_df["IndID"],
            Rep=chRNASeqSamples_df["RepNumber"],
        ),
        #Make bigwigs from test cut and tag
        # "../output/QC/AutosomeCountsPerSamples.tsv",
        # expand("bigwigs_FromNonWASPFilteredReads/{Phenotype}/{IndID}.{Rep}.bw", Phenotype=["POL2S5", "POL2S2", "H3K9ME3", "H3K36ME3", "H3K79ME2"], IndID="NA19210", Rep="1"),
        multiext(
            "ReferenceGenome/Annotations/gencode.v34.primary_assembly.annotation.gtf",
            "_all_exons.txt.gz",
            "_all_introns.bed.gz",
            "_fiveprime.bed.gz",
            "_threeprime.bed.gz",
        ),
        expand("SplicingAnalysis/IR/{Phenotype}/Counts.txt", Phenotype=RNASeqPhenotypes),
        "SplicingAnalysis/leafcutter/clustering/autosomes/leafcutter_perind.counts.gz",
        # "Multiqc/multiqc_report.html",
        expand(
            "QTLs/QTLTools/{Phenotype}/{Pass}.FDR_Added.txt.gz",
            Phenotype=MyPhenotypes,
            Pass=["PermutationPass"],
        ),
        expand(
            "featureCounts/{Phenotype}/NormFactors.tsv",
            Phenotype=[
                "chRNA.Expression.Splicing",
                "Expression.Splicing",
                "H3K4ME1",
                "H3K4ME3",
                "H3K27AC",
                "CTCF",
            ],
        ),
        "ReferenceGenome/Annotations/GTFTools_BasicAnnotations/gencode.v34.chromasomal.tss.bed",
        expand(
            "featureCounts/AtTSS/{Phenotype}/Counts.txt",
            Phenotype=["H3K27AC", "H3K4ME3"],
        ),
        expand(
            "featureCounts/{Phenotype}/Counts.txt",
            Phenotype=["MetabolicLabelled.30min", "MetabolicLabelled.60min"],
        ),
        ###expand(
        ###    "gwas_summary_stats/full_data/{accession}.tsv.gz", accession=gwas_df.index
        ###),
        expand(
            "QTLs/QTLTools/{Phenotype}/{Pass}{QTLsGenotypeSet}{FeatureCoordinatesRedefinedFor}.txt.gz",
            Phenotype=PhenotypesToColoc,
            QTLsGenotypeSet=["", "HarmonizedSNPs"],
            FeatureCoordinatesRedefinedFor=["", "ForColoc", "ForGWASColoc"],
            Pass=["NominalPass", "PermutationPass"],
        ),
        "featureCounts/chRNA.Expression.Splicing/CountsExons.txt",
        "featureCounts/chRNA.Expression.Splicing/CountTable.MeanLogRPKM.txt.gz",
        "../data/eRNA.saf",
        expand(
            "featureCounts/{Phenotype}_{ncRNA}/Counts.txt",
            Phenotype=[
                "polyA.Expression",
                "chRNA.Expression",
                "MetabolicLabelled.30min",
                "MetabolicLabelled.60min",
                "ProCap"
            ],
            ncRNA=["eRNA", "cheRNA"],
        ),
        "featureCounts/ProCap/Counts.txt",
        #### Inserted by Carlos
        # expand(
        #     "IntronWindowCounts/{IndID}.{windowStyle}.bed.gz",
        #     IndID=chRNASeqSamples_df["IndID"].unique(),
        #     windowStyle=["IntronWindows_equalLength", "IntronWindows"],
        # ),
        # expand(
        #     "slopes/{IndID}.tab.gz",
        #     IndID=chRNASeqSamples_df["IndID"].unique(),
        # ),
        # expand(
        #     "slopes/{IndID}_glm.nb.tab.gz",
        #     IndID=chRNASeqSamples_df["IndID"].unique(),
        # ),


rule Gather_chRNASeq_Fastq:
    """
    Useful to force rexecution of all chRNAseq related analysis after
    identifying sample swaps and correcting them in samples.tsv config
    """
    input:
        expand(
            "Fastq/{Phenotype}/{IndID}/{Rep}.R1.fastq.gz",
            zip,
            Phenotype=chRNASeqSamples_df["Phenotype"],
            IndID=chRNASeqSamples_df["IndID"],
            Rep=chRNASeqSamples_df["RepNumber"],
        ),


rule Gather_gwas_summary_stats:
    """
    invoke this as the target rule to download gwas summary stats. See the
    gwas_df dataframe assigned in common.py.
    """
    input:
        expand(
            "../output/hyprcoloc_results/{QTLsGenotypeSet}{FeatureCoordinatesRedefinedFor}/hyprcoloc.results.txt.gz",
            QTLsGenotypeSet="",
            FeatureCoordinatesRedefinedFor=["ForGWASColoc", "ForColoc"],
        ),
        expand("hyprcoloc/Results/{QTLsGenotypeSet}{FeatureCoordinatesRedefinedFor}/snpscores.txt.gz",
            QTLsGenotypeSet="",
            FeatureCoordinatesRedefinedFor=["ForColoc"],
            )
