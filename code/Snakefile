configfile: "config/config.yaml"


include: "rules/common.py"
include: "rules/DownloadAndPreprocess.smk"
include: "rules/Alignment.smk"
include: "rules/MakeBigwigs.smk"
# include: "rules/CutAndTagChecks.smk"
include: "rules/QC.smk"
include: "rules/ExpressionAnalysis.smk"
include: "rules/featureCounts.smk"
include: "rules/PeakCalling.smk"
include: "rules/SplicingAnalysis.smk"
include: "rules/ChromatinPehnotypesAnalysis.smk"
include: "rules/ProSeqAnalysis.smk"
include: "rules/QTLTools.smk"
include: "rules/Coloc.smk"
include: "rules/report.smk"
include: "rules/BensJupyterNotebookRules.smk"
include: "rules/GetNonCodingRNA.smk"
include: "rules/GWAS_PrepForColoc.smk"
include: "rules/chRNASeqSlopes.smk"
include: "rules/ProcessTehranchi.smk"
include: "rules/PlotQTLs.smk"
include: "rules/CalculateExonicPSI.smk"


wildcard_constraints:
    chrom="|".join(autosomes),
    IndID="|".join(Fastq_samples["IndID"]),
    Rep="\d+",
    QTLsGenotypeSet="|".join(["", "HarmonizedSNPs"]),
    FeatureCoordinatesRedefinedFor="|".join(["", "ForColoc", "ForGWASColoc"]),
    Pass="|".join(["PermutationPass", "NominalPass"]),


localrules:
    all,
    CollectNormalizedPsiTables,
    CollectColocResultsToOutputDir,
    CollectDownloadGWAS_SummaryStats,
    Collect_chRNASeq_Fastq,
    CollectColocResultsToCodeDir,
    CopyFastqFromLocal,
    DownloadFastqFromLink,
    Download1KG_GRCh38,
    STAR_make_index,
    DownloadHg38Ref,
    DownloadFastqFromLink_SE,
    DownloadGWAS_SummaryStats,
    InstallHyprcoloc,
    Download_hg19_to_hg38_chain,
    DownloadHg38Gencode_basic,
    DownloadKristjansdottirSupplementData2,


ruleorder: CopyFastqFromLocal > DownloadFastqFromLink


rule all:
    input:
        # expand("logs/PlotGruberQTLs/PlotFromShellScript.{pheno}.log", pheno=["H3K4ME3", "H3K27AC", "H3K4ME1"]),
        ####expand(
        ####    "QC/mbv/plots/{Phenotype}/{IndID}.{Rep}.pdf",
        ####    zip,
        ####    Phenotype=chRNASeqSamples_df["Phenotype"],
        ####    IndID=chRNASeqSamples_df["IndID"],
        ####    Rep=chRNASeqSamples_df["RepNumber"],
        ####),
        #Make bigwigs from test cut and tag
        # "../output/QC/AutosomeCountsPerSamples.tsv",
        # expand("bigwigs_FromNonWASPFilteredReads/{Phenotype}/{IndID}.{Rep}.bw", Phenotype=["POL2S5", "POL2S2", "H3K9ME3", "H3K36ME3", "H3K79ME2"], IndID="NA19210", Rep="1"),
        ####multiext(
        ####    "ReferenceGenome/Annotations/gencode.v34.primary_assembly.annotation.gtf",
        ####    "_all_exons.txt.gz",
        ####    "_all_introns.bed.gz",
        ####    "_fiveprime.bed.gz",
        ####    "_threeprime.bed.gz",
        ####),
        ####expand("SplicingAnalysis/IR/{Phenotype}/Counts.txt", Phenotype=RNASeqPhenotypes),
        ####"SplicingAnalysis/leafcutter/clustering/autosomes/leafcutter_perind.counts.gz",
        # "Multiqc/multiqc_report.html",
        ####expand(
        ####    "QTLs/QTLTools/{Phenotype}/{Pass}.FDR_Added.txt.gz",
        ####    Phenotype=MyPhenotypes,
        ####    Pass=["PermutationPass"],
        ####),
        ####expand(
        ####    "featureCounts/{Phenotype}/NormFactors.tsv",
        ####    Phenotype=[
        ####        "chRNA.Expression.Splicing",
        ####        "Expression.Splicing",
        ####        "H3K4ME1",
        ####        "H3K4ME3",
        ####        "H3K27AC",
        ####        "CTCF",
        ####    ],
        ####),
        ####"ReferenceGenome/Annotations/GTFTools_BasicAnnotations/gencode.v34.chromasomal.tss.bed",
        expand(
            "featureCounts/AtTSS/{Phenotype}/Counts.txt",
            Phenotype=["H3K27AC", "H3K4ME3", "H3K36ME3", "H3K4ME1"],
        ),
        ####expand(
        ####    "featureCounts/{Phenotype}/Counts.txt",
        ####    Phenotype=["MetabolicLabelled.30min", "MetabolicLabelled.60min"],
        ####),
        #expand(
        #   "gwas_summary_stats/full_data/{accession}.tsv.gz", accession=gwas_df.index
        #),
        ####expand(
        ####    "QTLs/QTLTools/{Phenotype}/{Pass}{QTLsGenotypeSet}{FeatureCoordinatesRedefinedFor}.txt.gz",
        ####    Phenotype=PhenotypesToColoc,
        ####    QTLsGenotypeSet=["", "HarmonizedSNPs"],
        ####    FeatureCoordinatesRedefinedFor=["", "ForColoc", "ForGWASColoc"],
        ####    Pass=["NominalPass", "PermutationPass"],
        ####),
        ####"featureCounts/chRNA.Expression.Splicing/CountsExons.txt",
        ####"featureCounts/chRNA.Expression.Splicing/CountTable.MeanLogRPKM.txt.gz",
        "../data/eRNA.saf",
        expand(
            "featureCounts/{Phenotype}_{ncRNA}/Counts.txt",
            Phenotype=[
                "polyA.Expression",
                "chRNA.Expression",
                "MetabolicLabelled.30min",
                "MetabolicLabelled.60min",
                "ProCap"
            ],
            ncRNA=["eRNA", "cheRNA", "lncRNA", "snoRNA"],#, "introns"],
        ),
        expand(
          "QTLs/QTLTools/chRNA.Expression_{ncRNA}/OnlyFirstReps.qqnorm.bed.gz",
          ncRNA = ["eRNA", "cheRNA", "snoRNA", "lncRNA"]
        ),
        "featureCounts/ProCap/Counts.txt",
        #"SplicingAnalysis/IR/chRNA.IR/Counts.txt",
        #"SplicingAnalysis/IR/polyA.IR/Counts.txt",
        "QTLs/QTLTools/chRNA.IR/OnlyFirstReps.qqnorm.bed.gz",
        "QTLs/QTLTools/polyA.IR/OnlyFirstReps.qqnorm.bed.gz",
        "SplicingAnalysis/IR/ProCap/Counts.txt",
        expand("QTLs/QTLTools/{Phenotype}/PermutationPass.FDR_Added.txt.gz", Phenotype=MyPhenotypes),
        expand("QTLs/QTLTools/{Phenotype}/PermutationPassForColoc.txt.gz", Phenotype=MyPhenotypes),
        expand("hyprcoloc/Results/ForColoc/{ColocName}/tidy_results_OnlyColocalized.txt.gz", ColocName = colocs_genewise.index),
        expand("QTLs/QTLTools/{Phenotype}/{Pass}{QTLsGenotypeSet}{FeatureCoordinatesRedefinedFor}.txt.tabix.gz", Pass="NominalPass", QTLsGenotypeSet="", FeatureCoordinatesRedefinedFor="ForColoc", Phenotype=MyPhenotypes),
        "QC/PvalsForPi1_0.1.txt.gz",
        # expand("hyprcoloc/Results/ForGWASColoc/{ColocName}/results.txt.gz", ColocName = colocs_gwas.index )


rule Collect_chRNASeq_Fastq:
    """
    Useful to force rexecution of all chRNAseq related analysis after
    identifying sample swaps and correcting them in samples.tsv config
    """
    input:
        ####expand(
        ####    "Fastq/{Phenotype}/{IndID}/{Rep}.R1.fastq.gz",
        ####    zip,
        ####    Phenotype=chRNASeqSamples_df["Phenotype"],
        ####    IndID=chRNASeqSamples_df["IndID"],
        ####    Rep=chRNASeqSamples_df["RepNumber"],
        ####),


rule CollectColocResultsToCodeDir:
    """
    invoke this as the target rule to perform colocalizations as defined in config/ColocRunWildcards.tsv without altering any git tracked files in ../output dir
    """
    input:
        expand("hyprcoloc/Results/ForColoc/{ColocName}/tidy_results_OnlyColocalized.txt.gz", ColocName = colocs_genewise.index),
        expand("hyprcoloc/Results/ForGWASColoc/{ColocName}/results.txt.gz", ColocName = colocs_gwas.index )

rule CollectColocResultsToOutputDir:
    """
    invoke this as the target rule to perform colocalizations as defined in config/ColocRunWildcards.tsv and move them to the ../output dir which is git tracked
    """
    input:
        expand("../output/hyprcoloc_results/ForColoc/{ColocName}/hyprcoloc.results.OnlyColocalized.Stats.txt.gz", ColocName = colocs_genewise.index),
        expand("../output/hyprcoloc_results/ForGWASColoc/{ColocName}/hyprcoloc.results.txt.gz", ColocName = colocs_gwas.index )

rule CollectDownloadGWAS_SummaryStats:
    input:
        expand("gwas_summary_stats/full_data/{accession}.tsv.gz", accession=gwas_df.index)

rule chRNAGetSlopes:
    """
    Get slopes for chRNA-seq data. 
    """
    input:
        expand(
            "IntronSlopes/IntronWindowCounts/{IndID}.{windowStyle}.bed.gz",
            IndID=chRNASeqSamples,
            windowStyle=["IntronWindows_equalLength", "IntronWindows"],
        ),
        expand(
            "IntronSlopes/slopes/{IndID}.{windowStyle}.tab.gz",
            IndID=chRNASeqSamples, windowStyle = ["IntronWindows_equalLength", "IntronWindows"]
        ),
        #expand(
        #    "IntronSlopes/slopes/{IndID}.{windowStyle}.glm_nb.tab.gz",
        #    IndID=chRNASeqSamples, windowStyle = ["IntronWindows_equalLength", "IntronWindows"]
        #),
        "QTLs/QTLTools/chRNA.Slopes/OnlyFirstReps.qqnorm.bed.gz",
        "QTLs/QTLTools/chRNA.Slopes/PermutationPass.FDR_Added.txt.gz"
        
        
rule testSpliceq:
    input:
        expand('SplicingAnalysis/SPLICEq/MetabolicLabelled.60min.{mode}/{IndID}.spliceq.tab',
        IndID = metabolic60samples,
        mode = ['IRjunctions', 'IER']),
        expand('SplicingAnalysis/SPLICEq/MetabolicLabelled.30min.{mode}/{IndID}.spliceq.tab',
        IndID = metabolic30samples,
        mode = ['IRjunctions', 'IER']),
        expand('SplicingAnalysis/SPLICEq/polyA.{mode}/{IndID}.spliceq.tab',
        IndID = polyAsamples,
        mode = ['IRjunctions', 'IER']),
        expand('SplicingAnalysis/SPLICEq/chRNA.{mode}/{IndID}.spliceq.tab',
        IndID = chRNAsamples,
        mode = ['IRjunctions', 'IER']),
        
        
rule CollectSpliceq:
    input:
        expand("QTLs/QTLTools/{Phenotype}.{mode}/OnlyFirstReps.ratios.bed.gz",
        Phenotype = ['chRNA', 'polyA', 'MetabolicLabelled.30min', 'MetabolicLabelled.60min'],
        mode = ['IRjunctions', 'IER'])
        
rule SpliceSitePhenotypes:
    input:
        expand(
            "QTLs/QTLTools/{Phenotype}.{Prime}/NominalPass.txt.gz",
            Phenotype = ['chRNA.Splicing', 'polyA.Splicing', 'H3K4ME1', 'H3K4ME3', 'H3K27AC'],
            Prime = ['5PrimeSS', '3PrimeSS']
        ),
        expand(
            "featureCounts/{Phenotype}.{SpliceSite}/Counts.txt",
            Phenotype = ['H3K4ME1', 'H3K4ME3', 'H3K27AC'],
            SpliceSite = ['5PrimeSS', '3PrimeSS']
        ),
        expand(
        "featureCounts/{Phenotype}/NormFactors.tsv",
        Phenotype = ['chRNA.Expression', 'chRNA.Expression_eRNA', 'chRNA.Expression_cheRNA', 'chRNA.Expression_snoRNA', 
        'chRNA.Expression_lncRNA', 'H3K27AC.3PrimeSS', 'H3K27AC.5PrimeSS', 'H3K4ME3.3PrimeSS', 'H3K4ME3.5PrimeSS',
        'H3K4ME1.3PrimeSS', 'H3K4ME1.5PrimeSS', 'H3K36ME3.5PrimeSS', 'H3K36ME3.3PrimeSS']
        ),
        expand(
            "QTLs/QTLTools/{Phenotype}.{Prime}.Peaks/NominalPass.txt.gz",
            Phenotype = ['H3K4ME1', 'H3K4ME3', 'H3K27AC', 'CTCF', 'H3K36ME3'],
            Prime = ['5PrimeSS', '3PrimeSS']
        ),
        expand("QTLs/QTLTools/{Phenotype}/PermutationPass.FDR_Added.txt.gz", 
        Phenotype=["MetabolicLabelled.30min.IR", "MetabolicLabelled.60min.IR",
                   "MetabolicLabelled.30min.Splicing", "MetabolicLabelled.60min.Splicing"]
        )
        #"QTLs/QTLTools/chRNA.Splicing.3PrimeSS/NominalPass.txt.gz",
        #"QTLs/QTLTools/polyA.Splicing.5PrimeSS/NominalPass.txt.gz",
        #"QTLs/QTLTools/polyA.Splicing.3PrimeSS/NominalPass.txt.gz",
        #"QTLs/QTLTools/chRNA.Splicing.5PrimeSS/PermutationPass.FDR_Added.txt.gz",
        #"QTLs/QTLTools/chRNA.Splicing.3PrimeSS/PermutationPass.FDR_Added.txt.gz",
        #"QTLs/QTLTools/polyA.Splicing.5PrimeSS/PermutationPass.FDR_Added.txt.gz",
        #"QTLs/QTLTools/polyA.Splicing.3PrimeSS/PermutationPass.FDR_Added.txt.gz",

